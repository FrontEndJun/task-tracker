{"version":3,"sources":["hooks/useFetch.jsx","context/auth.context.jsx","pages/auth-page.jsx","components/Pagination.jsx","components/TaskCreator.jsx","components/Filter.jsx","hooks/useFilter.jsx","components/Loader.jsx","components/TaskItem.jsx","components/TasksList.jsx","pages/tasks.jsx","components/NavBar.jsx","App.jsx","hooks/useAuth.jsx","index.jsx"],"names":["useFetch","useState","loading","setLoading","errors","setErrors","req","useCallback","url","a","method","body","headers","JSON","stringify","fetch","res","json","data","ok","msg","message","clearErrors","AuthContext","createContext","token","admin","userId","isAuth","AuthPage","username","password","form","setForm","auth","useContext","submitHandler","e","preventDefault","login","tkn","id","isAdmin","changeHandler","target","name","value","className","onSubmit","type","onChange","htmlFor","disabled","Pagination","currentPage","isFirst","isLast","pages","key","to","href","TaskCreator","email","console","log","placeholder","Filter","select","useRef","filterName","setFilterName","filterDir","setFilterDir","history","useHistory","page","useParams","filter","push","useEffect","changeDir","changeFilter","useFilter","window","M","FormSelect","init","current","ref","onClick","Loader","TaskItem","text","completed","edited","hasChanges","setHasChages","values","setValues","clickHandler","Authorization","defaultChecked","TasksList","tasks","map","task","TaskPage","setTasks","pagesAmount","setPagesAmount","l","useLocation","search","querystring","parse","dir","Math","ceil","all","fetchData","count","parseInt","NavBar","logout","App","setToken","setUserId","setAdmin","jwttoken","localStorage","setItem","removeItem","getItem","useAuth","Provider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9f0c289.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport const useFetch = () => {\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState(null);\n  const req = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\n    setLoading(true);\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n      }\n\n      let res = await fetch(`https://react-tracker-task.herokuapp.com${url}`, { headers, method, body });\n      const data = await res.json();\n\n      if (!res.ok) {\n        setErrors(data.msg);\n      }\n\n      setLoading(false);\n      return data;\n    } catch (err) {\n      setLoading(false);\n      setErrors(err.message);\n    }\n  }, []);\n\n  const clearErrors = useCallback(() => setErrors(null), []);\n\n  return { loading, req, errors, clearErrors };\n};\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  token: null,\n  admin: false,\n  userId: null,\n  isAuth: false,\n});\n","import React, { useState, useContext } from \"react\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { AuthContext } from \"../context/auth.context\";\n\nexport const AuthPage = () => {\n  const { req, loading, errors } = useFetch();\n  const [form, setForm] = useState({ username: \"\", password: \"\" });\n  const auth = useContext(AuthContext);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const res = await req(\"/auth/login\", \"POST\", { ...form }, { \"Content-Type\": \"application/json\" });\n    auth.login(res.tkn, res.id, res.isAdmin);\n  };\n\n  const changeHandler = e => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col s6 offset-s3\">\n        <h2 className=\"offset-s4 col\">LogIn</h2>\n        <form onSubmit={submitHandler}>\n          <div className=\"row\">\n            <div className=\"input-field col s6\">\n              <input id=\"username\" type=\"text\" name=\"username\" className=\"validate\" onChange={changeHandler} />\n              <label htmlFor=\"first_name\" className=\"active\">\n                Username\n              </label>\n            </div>\n            <div className=\"input-field col s6\">\n              <input id=\"password\" type=\"password\" name=\"password\" onChange={changeHandler} />\n              <label\n                htmlFor=\"last_name\"\n                className=\"active\n              \"\n              >\n                Password\n              </label>\n            </div>\n\n            <button type=\"submit\" className=\"waves-effect waves-light btn col s4 offset-s4\" disabled={loading}>\n              Sign In\n            </button>\n          </div>\n        </form>\n      </div>\n      <p className=\"col s12 red-text\">{errors}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Pagination = ({ currentPage, pages }) => {\n  const isFirst = currentPage == 1;\n  const isLast = currentPage == pages;\n\n  return (\n    <ul className=\"pagination\">\n      <li key=\"1\" className={`waves-effect ${isFirst ? \"disabled\" : \"\"}`}>\n        <Link to={`/tasks/${currentPage - 1}`} className={isFirst ? \"disabled\" : \"\"}>\n          <i className=\"material-icons\">chevron_left</i>\n        </Link>\n      </li>\n      <li key=\"2\" className=\"active\">\n        <a href=\"#!\">{currentPage}</a>\n      </li>\n      <li key=\"3\" className={`waves-effect ${isLast ? \"disabled\" : \"\"}`}>\n        <Link to={`/tasks/${currentPage + 1}`} className={isLast ? \"disabled\" : \"\"}>\n          <i className=\"material-icons\">chevron_right</i>\n        </Link>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useFetch } from \"../hooks/useFetch\";\n\nexport const TaskCreator = () => {\n  const [form, setForm] = useState({ username: \"\", email: \"\" });\n  const { req } = useFetch();\n  const changeHandler = e => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    const res = await req(\"/tasks/create\", \"POST\", { ...form }, { \"Content-Type\": \"application/json\" });\n    console.log(res);\n  };\n  return (\n    <form onSubmit={submitHandler} className=\"row valign-wrapper\">\n      <div className=\"col s2\">\n        <input id=\"username\" placeholder=\"Username\" type=\"text\" className=\"validate\" name=\"username\" onChange={changeHandler} />\n      </div>\n      <div className=\"col s3\">\n        <input id=\"email\" placeholder=\"Email\" type=\"email\" className=\"validate\" name=\"email\" onChange={changeHandler} />\n      </div>\n      <div className=\"col s6\">\n        <textarea id=\"text\" placeholder=\"Task Text\" className=\"materialize-textarea\" name=\"text\" onChange={changeHandler}></textarea>\n      </div>\n      <div className=\"col s1\">\n        <button type=\"submit\" className=\"waves-effect waves-light btn\">\n          Add Task\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { useFilter } from \"../hooks/useFilter\";\n\nexport const Filter = () => {\n  const select = useRef(null);\n  const { filterDir, changeDir, changeFilter } = useFilter();\n  useEffect(() => {\n    window.M.FormSelect.init(select.current);\n  }, []);\n\n  return (\n    <div className=\"row valign-wrapper\">\n      <div className=\"input-field col s6 offset-s3\">\n        <select ref={select} onChange={e => changeFilter(e.target.value)} value={\"default\"}>\n          <option value=\"default\" disabled>\n            Sort By:\n          </option>\n          <option value=\"email\">Email</option>\n          <option value=\"username\">Username</option>\n          <option value=\"completed\">Status</option>\n        </select>\n        <label></label>\n      </div>\n      <button className={`btn-floating btn-large waves-effect waves-light teal lighten-2 ${filterDir && \"rotate180\"}`} onClick={e => changeDir()}>\n        <i className=\"material-icons dp48\">arrow_upward</i>\n      </button>\n    </div>\n  );\n};\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nexport const useFilter = () => {\n  const [filterName, setFilterName] = useState(\"\");\n  const [filterDir, setFilterDir] = useState(\"\");\n  const history = useHistory();\n  const { page } = useParams();\n  const filter = useCallback(() => {\n    history.push(`/tasks/${page}?filter=${filterName}&dir=${filterDir}`);\n  }, [filterDir, filterName, page]);\n\n  const changeDir = () => {\n    const dir = filterDir === \"\" ? \"DESC\" : \"\";\n    setFilterDir(dir);\n  };\n  const changeFilter = name => {\n    setFilterName(name);\n  };\n\n  useEffect(() => {\n    filter();\n  }, [filter]);\n\n  return { filterName, filterDir, page, changeDir, changeFilter, filter };\n};\n","import React from \"react\";\n\nexport const Loader = () => (\n  <div className=\"row\">\n    <div className=\"preloader-wrapper big active col offset-s5\">\n      <div className=\"spinner-layer spinner-blue\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n\n      <div className=\"spinner-layer spinner-red\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n\n      <div className=\"spinner-layer spinner-yellow\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n\n      <div className=\"spinner-layer spinner-green\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n","import React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../context/auth.context\";\nimport { useFetch } from \"../hooks/useFetch\";\n\nexport const TaskItem = ({ id, email, text, completed, username, edited }) => {\n  const [hasChanges, setHasChages] = useState(false);\n  const [values, setValues] = useState({ text, completed });\n  const { admin, token } = useContext(AuthContext);\n  const { req } = useFetch();\n  const inputChangeHandler = e => {\n    setValues({ ...values, text: e.target.value });\n    setHasChages(true);\n  };\n  const checkboxChangeHandler = e => {\n    setValues({ ...values, completed: !completed });\n    setHasChages(true);\n  };\n\n  const clickHandler = async e => {\n    setHasChages(false);\n    const res = await req(`/tasks/${id}`, \"PUT\", { ...values }, { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` });\n  };\n  return (\n    <tr className=\"row valign-wrapper\">\n      <td className=\"col s3\">{email}</td>\n      <td className=\"col s2\">{username}</td>\n      <td className=\"col s4\">\n        <textarea id=\"id\" name=\"text\" disabled={!admin} className=\"materialize-textarea\" value={values.text} onChange={inputChangeHandler}></textarea>\n      </td>\n      <td className=\"col s1 valign-wrapper\">\n        <label className=\"\">\n          <input type=\"checkbox\" name=\"completed\" className=\"filled-in\" defaultChecked={values.completed} disabled={!admin} onChange={checkboxChangeHandler} />\n          <span> </span>\n        </label>\n      </td>\n      <td className=\"col s2\">\n        <button className={`btn waves-effect waves-light  ${hasChanges ? \"\" : \"none\"}`} type=\"submit\" name=\"action\" onClick={clickHandler}>\n          Save\n          <i className=\"material-icons dp48\">autorenew</i>\n        </button>\n        {edited ? \"Отредактировано Администратором\" : \"\"}\n      </td>\n    </tr>\n  );\n};\n","import React from \"react\";\nimport { Loader } from \"./Loader\";\nimport { TaskItem } from \"./TaskItem\";\nexport const TasksList = ({ tasks, loading }) => {\n  return (\n    <table>\n      <thead>\n        <tr className=\"row\">\n          <th className=\"col s3\">Email</th>\n          <th className=\"col s2\">Username</th>\n          <th className=\"col s4\">Task Text</th>\n          <th className=\"col s2\">Completed</th>\n          <th className=\"col s1\"></th>\n        </tr>\n      </thead>\n      {loading ? (\n        <Loader />\n      ) : (\n        tasks && (\n          <tbody>\n            {tasks.map(task => (\n              <TaskItem key={task.id} {...task} />\n            ))}\n          </tbody>\n        )\n      )}\n    </table>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Pagination } from \"../components/Pagination\";\nimport { TaskCreator } from \"../components/TaskCreator\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { Filter } from \"../components/Filter\";\nimport querystring from \"query-string\";\nimport { TasksList } from \"../components/TasksList\";\n\nexport const TaskPage = () => {\n  const [tasks, setTasks] = useState([]);\n  const [pagesAmount, setPagesAmount] = useState(1);\n  const { req, loading } = useFetch();\n  const { page } = useParams();\n  const l = useLocation();\n  const search = querystring.parse(l.search);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await req(`/tasks/${page}?filter=${search.filter}&dir=${search.dir}`);\n      setTasks(res.tasks);\n      setPagesAmount(Math.ceil(res.all / 3));\n    };\n\n    fetchData();\n  }, [page, req, l]);\n\n  console.count(\"render\");\n  return (\n    <div className=\"container\">\n      <TaskCreator />\n      <Filter />\n      <TasksList tasks={tasks} loading={loading} />\n      <Pagination currentPage={parseInt(page, 10)} pages={pagesAmount} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/auth.context\";\n\nexport const NavBar = () => {\n  const auth = useContext(AuthContext);\n\n  const logoutHandler = () => {\n    auth.logout();\n  };\n\n  return (\n    <nav>\n      <div className=\"container\">\n        <div className=\"nav-wrapper\">\n          <a href=\"#\" className=\"brand-logo\">\n            Task Tracker\n          </a>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            <li>\n              <NavLink to=\"/tasks/1\">Tasks</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/about\">About</NavLink>\n            </li>\n            <li>{auth.isAuth ? <a onClick={logoutHandler}>Log out</a> : <NavLink to=\"/auth\">Log In</NavLink>}</li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { AuthPage } from \"./pages/auth-page\";\nimport { TaskPage } from \"./pages/tasks\";\nimport { useAuth } from \"./hooks/useAuth\";\nimport { AuthContext } from \"./context/auth.context\";\nimport { NavBar } from \"./components/NavBar\";\n\nfunction App() {\n  const { token, userId, admin, login, logout } = useAuth();\n  const isAuth = !!token;\n\n  return (\n    <AuthContext.Provider value={{ token, admin, userId, isAuth, login, logout }}>\n      <BrowserRouter>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={AuthPage} />>\n          <Route exact path=\"/tasks/:page\">\n            <TaskPage />\n          </Route>\n          {!isAuth && (\n            <Route exact path=\"/auth\">\n              <AuthPage />\n            </Route>\n          )}\n          <Redirect to=\"/tasks/1\" />\n        </Switch>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { useState, useEffect, useCallback } from \"react\";\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [admin, setAdmin] = useState(null);\n\n  const login = useCallback((jwttoken, id, isAdmin) => {\n    setToken(jwttoken);\n    setUserId(id);\n    setAdmin(isAdmin);\n\n    localStorage.setItem(\"userdata\", JSON.stringify({ token: jwttoken, admin: isAdmin, userId: id }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setAdmin(null);\n\n    localStorage.removeItem(\"userdata\");\n  }, []);\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"userdata\"));\n\n    if (data && data.token) {\n      login(data.token, data.userId, data.admin);\n    }\n  }, [login]);\n\n  return { login, logout, token, admin, userId };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"materialize-css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}